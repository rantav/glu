<?xml version="1.0" encoding="UTF-8"?>
<!--
  ~ Copyright (c) 2010-2010 LinkedIn, Inc
  ~ Portions Copyright (c) 2011 Yan Pujante
  ~
  ~ Licensed under the Apache License, Version 2.0 (the "License"); you may not
  ~ use this file except in compliance with the License. You may obtain a copy of
  ~ the License at
  ~
  ~ http://www.apache.org/licenses/LICENSE-2.0
  ~
  ~ Unless required by applicable law or agreed to in writing, software
  ~ distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
  ~ WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
  ~ License for the specific language governing permissions and limitations under
  ~ the License.
  -->

<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-2.0.xsd">

  <bean id="agentFactory"
        class="org.linkedin.glu.agent.rest.client.AgentFactoryImpl"
        factory-method="create">
    <constructor-arg>
      <map>
        <entry key="sslEnabled" value="${console.sslEnabled}"/>

        <entry key="keystorePath" value="${console.keystorePath}"/>
        <entry key="keystorePassword" value="${console.keystorePassword}"/>
        <entry key="keyPassword" value="${console.keyPassword}"/>

        <entry key="truststorePath" value="${console.truststorePath}"/>
        <entry key="truststorePassword" value="${console.truststorePassword}"/>

      </map>
    </constructor-arg>
  </bean>

   <bean id="encryptionKeysProvider"
        class="org.linkedin.glu.agent.rest.client.EncryptionKeysProviderImpl"
        factory-method="create">
    <constructor-arg>
      <map>
        <entry key="secretkeystorePath" value="${console.secretkeystorePath}"/>
        <entry key="keystorePassword" value="${console.keystorePassword}"/>
        <entry key="keyPassword" value="${console.keyPassword}"/>
      </map>
    </constructor-arg>
  </bean>

  <bean id="actionExecutionFactory"
        class="org.linkedin.glu.orchestration.engine.core.action.execution.ActionExecutionFactoryImpl">
    <property name="agentFactory" ref="agentFactory"/>
    <property name="agentURIProvider" ref="_agentsServiceImpl"/>
    <property name="encryptionKeysProvider" ref="encryptionKeysProvider"/>
  </bean>

  <bean id="executor" class="java.util.concurrent.Executors" factory-method="newCachedThreadPool"/>

  <bean id="leafExecutor"
        class="org.linkedin.glu.orchestration.engine.action.execution.ActionDescriptorStepExecutor">
    <property name="actionExecutionFactory" ref="actionExecutionFactory"/>
  </bean>

  <bean id="planExecutor" class="org.linkedin.glu.provisioner.plan.impl.PlanExecutor">
    <property name="clock"><bean class="org.linkedin.util.clock.SystemClock" factory-method="instance"/></property>
    <property name="executorService" ref="executor"/>
    <property name="leafStepExecutor" ref="leafExecutor"/>
  </bean>

  <bean id="deployer" class="org.linkedin.glu.orchestration.engine.deployment.DeployerImpl">
    <property name="planExecutor" ref="planExecutor"/>
  </bean>

  <bean id="deltaMgr" class="org.linkedin.glu.orchestration.engine.delta.DeltaMgrImpl"/>

  <bean id="planner" class="org.linkedin.glu.orchestration.engine.planner.PlannerImpl">
    <property name="agentURIProvider" ref="_agentsServiceImpl"/>
  </bean>

  <bean id="agentPlanner" class="org.linkedin.glu.provisioner.impl.planner.AgentPlanner"/>

  <bean id="configurableFactory" class="org.linkedin.glu.agent.rest.client.ConfigurableFactoryImpl"/>

  <bean id="consoleConfig" class="org.linkedin.glu.grails.utils.ConsoleConfig"/>

  <!-- *********************** -->
  <!-- auditLogService         -->
  <!-- *********************** -->
  <bean id="auditLogService"
        class="org.linkedin.glu.console.provisioner.services.audit.AuditLogServiceImpl"/>

  <!-- *********************** -->
  <!-- authorizationService    -->
  <!-- *********************** -->
  <bean id="authorizationService"
        class="org.linkedin.glu.console.authorization.ShiroAuthorizationService">
    <property name="unrestrictedLocation" value="${console.authorizationService.unrestrictedLocation}"/>
  </bean>

  <!-- *********************** -->
  <!-- fabricService         -->
  <!-- *********************** -->
  <bean id="_fabricServiceImpl"
        class="org.linkedin.glu.orchestration.engine.fabric.FabricServiceImpl"
        destroy-method="destroy">
    <property name="configurableFactory" ref="configurableFactory"/>
    <property name="fabricStorage">
      <bean class="org.linkedin.glu.console.provisioner.services.storage.FabricStorageImpl"/>
    </property>
  </bean>

  <bean id="fabricService" class="org.linkedin.glu.orchestration.engine.fabric.AuditedFabricService">
    <property name="fabricService" ref="_fabricServiceImpl"/>
    <property name="auditLogService" ref="auditLogService"/>
  </bean>

  <!-- *********************** -->
  <!-- trackerService         -->
  <!-- *********************** -->
  <bean id="trackerService"
        class="org.linkedin.glu.orchestration.engine.tracker.TrackerServiceImpl"
        destroy-method="destroy">
    <property name="fabricService" ref="fabricService"/>
  </bean>

  <!-- *********************** -->
  <!-- tagsService             -->
  <!-- *********************** -->
  <bean id="tagsService" class="org.linkedin.glu.orchestration.engine.tags.TagsService">
    <constructor-arg>
      <bean factory-bean="consoleConfig" factory-method="getDefault">
        <constructor-arg value="tags"/>
      </bean>
    </constructor-arg>
  </bean>

  <!-- *********************** -->
  <!-- agentsService           -->
  <!-- *********************** -->
  <bean id="_agentsServiceImpl"
        class="org.linkedin.glu.orchestration.engine.agents.AgentsServiceImpl">
    <property name="agentFactory" ref="agentFactory"/>
    <property name="agentPlanner" ref="agentPlanner"/>
    <property name="trackerService" ref="trackerService"/>
    <property name="authorizationService" ref="authorizationService"/>
  </bean>

  <bean id="agentsService" class="org.linkedin.glu.orchestration.engine.agents.AuditedAgentsService">
    <property name="agentsService" ref="_agentsServiceImpl"/>
    <property name="auditLogService" ref="auditLogService"/>
  </bean>

  <!-- *********************** -->
  <!-- systemService           -->
  <!-- *********************** -->
  <bean id="_systemServiceImpl"
        class="org.linkedin.glu.orchestration.engine.system.SystemServiceImpl">
    <property name="agentsService" ref="agentsService"/>
    <property name="systemStorage">
      <bean class="org.linkedin.glu.console.provisioner.services.storage.SystemStorageImpl"/>
    </property>
  </bean>

  <bean id="systemService" class="org.linkedin.glu.orchestration.engine.system.AuditedSystemService">
    <property name="systemService" ref="_systemServiceImpl"/>
    <property name="auditLogService" ref="auditLogService"/>
  </bean>

  <!-- *********************** -->
  <!-- deploymentService           -->
  <!-- *********************** -->
  <bean id="_deploymentServiceImpl"
        class="org.linkedin.glu.orchestration.engine.deployment.DeploymentServiceImpl">
    <property name="agentsService" ref="agentsService"/>
    <property name="authorizationService" ref="authorizationService"/>
    <property name="deployer" ref="deployer"/>
    <property name="deltaMgr" ref="deltaMgr"/>
    <property name="planner" ref="planner"/>
    <property name="fabricService" ref="fabricService"/>
    <property name="deploymentStorage">
      <bean class="org.linkedin.glu.console.provisioner.services.storage.DeploymentStorageImpl"/>
    </property>
  </bean>

  <bean id="deploymentService" class="org.linkedin.glu.orchestration.engine.deployment.AuditedDeploymentService">
    <property name="auditLogService" ref="auditLogService"/>
    <property name="deploymentService" ref="_deploymentServiceImpl"/>
  </bean>

  <!-- *********************** -->
  <!-- deltaService            -->
  <!-- *********************** -->
  <bean id="deltaService" class="org.linkedin.glu.orchestration.engine.delta.DeltaServiceImpl">
    <property name="agentsService" ref="agentsService"/>
    <property name="fabricService" ref="fabricService"/>
    <property name="deltaMgr" ref="deltaMgr"/>
  </bean>

  <!-- *********************** -->
  <!-- encryptionService       -->
  <!-- *********************** -->
  <bean id="encryptionService" class="org.linkedin.glu.orchestration.engine.encryption.EncryptionServiceImpl">
    <property name="encryptionKeysProvider" ref="encryptionKeysProvider"/>
  </bean>
</beans>
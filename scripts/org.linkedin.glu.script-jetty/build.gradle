/*
 * Copyright (c) 2011 Yan Pujante
 *
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not
 * use this file except in compliance with the License. You may obtain a copy of
 * the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
 * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
 * License for the specific language governing permissions and limitations under
 * the License.
 */

configurations {
  jetty
}

dependencies {
  jetty spec.external.jettyPackage
}

// fetching jetty (the skeleton)
def jettyArchive = configurations.jetty.resolve().toList()[0]

// compiling the sample app to deploy in jetty
def sampleWebappProject = evaluationDependsOn(':samples:org.linkedin.glu.samples.sample-webapp')
File sampleWebapp = sampleWebappProject.tasks.getByPath('war').archivePath

// providing the values to the test
test {
  systemProperties = [skeleton: jettyArchive,
                      war: sampleWebapp.canonicalPath]
  jvmArgs = ["-Dlog4j.configuration=file:${new File(rootDir, 'agent/org.linkedin.glu.agent-server-upgrade/src/cmdline/resources/conf/log4j.xml').canonicalPath}"]
}

tasks.'test'.dependsOn(sampleWebappProject.tasks.getByPath('war'))